---
// Hero.astro - Streamlined version using global styles
const title = "PC and Laptop Repairs and Supply";
const subtitle = "Expert IT Support in Romford & Havering";
const description = "We offer fast and affordable PC repairs, laptop servicing, virus removal, and data recovery in Harold Hill, Romford, and surrounding areas. From custom gaming rigs to home and business workstations, we supply both new and refurbished computers tailored to your needs and budget.";

const ctaButtons = [
  {
    text: "Call Now: 07971 331814",
    href: "tel:+447971331814",
    variant: "btn--primary",
    icon: "phone",
    ariaLabel: "Call us now at 07971 331814"
  },
  {
    text: "WhatsApp Us",
    href: "https://wa.me/447971331814",
    variant: "btn--success",
    icon: "whatsapp",
    ariaLabel: "Contact us on WhatsApp"
  },
  {
    text: "Join Facebook Group",
    href: "https://www.facebook.com/groups/217286604958495/",
    variant: "btn--secondary",
    icon: "facebook",
    ariaLabel: "Join our Facebook community group"
  }
];

const services = [
  { title: "Computer Repairs", desc: "Fast diagnosis & repair", icon: "üîß" },
  { title: "Custom PCs", desc: "Gaming & business builds", icon: "üñ•Ô∏è" },
  { title: "IT Support", desc: "Ongoing technical support", icon: "üõ†Ô∏è" }
];

const features = [
  { text: "Same-day Service", delay: 0 },
  { text: "Free Diagnosis", delay: 0.2 },
  { text: "No Fix, No Fee", delay: 0.4 }
];
---

<section 
  class="hero-section"
  role="banner"
  aria-labelledby="hero-title"
>
  <!-- Background -->
  <div class="hero-background" aria-hidden="true">
    <img 
      src="/mainpcpic.jpg" 
      alt=""
      class="hero-bg-image"
      loading="eager"
      decoding="async"
      fetchpriority="high"
    />
    <div class="hero-bg-overlay"></div>
  </div>

  <!-- Background Effects -->
  <div class="background-effects" aria-hidden="true">
    <div class="floating-orb floating-orb--blue" data-speed="0.5"></div>
    <div class="floating-orb floating-orb--indigo" data-speed="0.7"></div>
    <div class="floating-orb floating-orb--purple" data-speed="0.3"></div>
    <div class="floating-particles"></div>
  </div>

  <div class="hero-content">
    
    <!-- Title Section -->
    <header class="hero-header">
      <h1 id="hero-title" class="hero-title">
        <span class="title-line title-line--primary text-gradient">{title.split(' ').slice(0, 3).join(' ')}</span>
        <span class="title-line title-line--secondary text-gradient">{title.split(' ').slice(3).join(' ')}</span>
      </h1>
      
      <div class="title-divider">
        <div class="divider-line"></div>
        <div class="divider-glow"></div>
      </div>
      
      <p class="hero-subtitle">{subtitle}</p>
    </header>

    <!-- Description -->
    <div class="hero-description">
      <p class="description-text">{description}</p>
      
      <!-- Feature Badges using global badge class -->
      <div class="feature-badges" role="list" aria-label="Key service features">
        {features.map((feature, index) => (
          <div 
            class="badge animate-on-scroll" 
            role="listitem"
            style={`animation-delay: ${0.8 + feature.delay}s;`}
          >
            <div class="badge__indicator" aria-hidden="true"></div>
            <span>{feature.text}</span>
          </div>
        ))}
      </div>
    </div>

    <!-- CTA Section using global button classes -->
    <div class="cta-section" role="group" aria-label="Contact options">
      {ctaButtons.map((btn, index) => (
        <a
          href={btn.href}
          class={`btn ${btn.variant} cta-button`}
          target={btn.href.startsWith("http") ? "_blank" : "_self"}
          rel={btn.href.startsWith("http") ? "noopener noreferrer" : undefined}
          aria-label={btn.ariaLabel}
          style={`animation-delay: ${1.2 + (index * 0.15)}s;`}
        >
          <div class="btn__background" aria-hidden="true"></div>
          <div class="btn__shine" aria-hidden="true"></div>
          
          <div class="btn__content">
            <div class="cta-icon" aria-hidden="true">
              {btn.icon === "phone" && (
                <svg class="icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                </svg>
              )}
              {btn.icon === "whatsapp" && (
                <svg class="icon" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.608"></path>
                </svg>
              )}
              {btn.icon === "facebook" && (
                <svg class="icon" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"></path>
                </svg>
              )}
            </div>
            <span class="cta-text">{btn.text}</span>
          </div>
          
          <div class="btn__ripple" aria-hidden="true"></div>
        </a>
      ))}
    </div>

    <!-- Service Cards using global card classes -->
    <div class="services-section" role="region" aria-labelledby="services-heading">
      <h2 id="services-heading" class="sr-only">Our main services</h2>
      <div class="services-grid grid grid--auto-fit">
        {services.map((service, index) => (
          <div 
            class="card service-card animate-on-scroll" 
            style={`animation-delay: ${1.8 + (index * 0.15)}s;`}
            role="article"
            tabindex="0"
          >
            <div class="service-icon" aria-hidden="true">{service.icon}</div>
            <h3 class="service-title">{service.title}</h3>
            <p class="service-description">{service.desc}</p>
            <div class="card__glow" aria-hidden="true"></div>
          </div>
        ))}
      </div>
    </div>

</section>

<style>
  /* Hero Section */
  .hero-section {
    position: relative;
    min-height: 100vh;
    overflow: hidden;
    background: #0f172a;
    color: var(--text-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    padding-bottom: env(safe-area-inset-bottom, 0); /* Handle mobile safe areas */
  }

  /* Background Styles */
  .hero-background {
    position: absolute;
    inset: 0;
    z-index: 1;
  }

  .hero-bg-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    opacity: 0.3;
    animation: parallax-zoom 120s ease-in-out infinite;
  }

  .hero-bg-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      rgba(15, 23, 42, 0.9) 0%,
      rgba(30, 41, 59, 0.8) 50%,
      rgba(0, 0, 0, 0.7) 100%
    );
    backdrop-filter: blur(1px);
  }

  /* Background Effects */
  .background-effects {
    position: absolute;
    inset: 0;
    z-index: 2;
    pointer-events: none;
  }

  .floating-orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(60px);
    opacity: 0.4;
    animation: float-enhanced 8s ease-in-out infinite;
  }

  .floating-orb--blue {
    top: 15%;
    left: 10%;
    width: 12rem;
    height: 12rem;
    background: radial-gradient(circle, var(--primary-blue) 0%, transparent 70%);
    animation-duration: 6s;
  }

  .floating-orb--indigo {
    bottom: 20%;
    right: 15%;
    width: 16rem;
    height: 16rem;
    background: radial-gradient(circle, var(--primary-indigo) 0%, transparent 70%);
    animation-delay: 2s;
    animation-duration: 8s;
  }

  .floating-orb--purple {
    top: 50%;
    left: 60%;
    width: 10rem;
    height: 10rem;
    background: radial-gradient(circle, var(--primary-purple) 0%, transparent 70%);
    animation-delay: 4s;
    animation-duration: 7s;
  }

  .floating-particles {
    position: absolute;
    inset: 0;
    background-image: 
      radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
      radial-gradient(2px 2px at 40px 70px, rgba(99, 102, 241, 0.4), transparent),
      radial-gradient(1px 1px at 90px 40px, rgba(139, 92, 246, 0.3), transparent),
      radial-gradient(1px 1px at 130px 80px, rgba(59, 130, 246, 0.4), transparent);
    background-repeat: repeat;
    background-size: 200px 150px;
    animation: particles-drift 60s linear infinite;
  }

  /* Content Layout */
  .hero-content {
    position: relative;
    z-index: 10;
    max-width: var(--content-max-width);
    width: 100%;
    padding: var(--hero-padding);
    padding-bottom: clamp(2rem, 8vh, 4rem); /* Ensure bottom spacing */
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: clamp(1.5rem, 3vh, 2.5rem); /* Reduced gaps */
    min-height: 100vh;
  }

  /* Header Styles */
  .hero-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem; /* Reduced from 1.5rem */
  }

  .hero-title {
    font-size: clamp(2.50rem, 8vw, 4rem);
    font-weight: 900;
    line-height: 1.3;
    margin: 0;
    padding-bottom: 0.2rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .title-line {
    display: block;
    animation: title-reveal 1s ease-out forwards;
    opacity: 0;
    transform: translateY(30px);
  }

  .title-line--primary {
    animation-delay: 0.2s;
  }

  .title-line--secondary {
    animation-delay: 0.4s;
  }

  .title-divider {
    position: relative;
    width: 8rem;
    height: 4px;
    margin: 0.5rem 0; /* Reduced from 1rem 0 */
  }

  .divider-line {
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, var(--primary-blue), var(--primary-indigo));
    border-radius: 2px;
    animation: divider-expand 1s ease-out 0.6s forwards;
    transform: scaleX(0);
  }

  .divider-glow {
    position: absolute;
    inset: -2px;
    background: linear-gradient(90deg, var(--primary-blue), var(--primary-indigo));
    border-radius: 4px;
    filter: blur(4px);
    opacity: 0;
    animation: glow-pulse 2s ease-in-out 1.6s infinite;
  }

  .hero-subtitle {
    font-size: clamp(1.25rem, 4vw, 2rem);
    font-weight: 300;
    color: var(--text-secondary);
    margin: 0;
    animation: fade-slide-up 0.8s ease-out 0.8s both;
  }

  /* Description */
  .hero-description {
    max-width: 50rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem; /* Reduced from 2rem */
    animation: fade-slide-up 0.8s ease-out 1s both;
  }

  .description-text {
    font-size: clamp(1.125rem, 2.5vw, 1.5rem);
    line-height: 1.7;
    color: var(--text-secondary);
    margin: 0;
  }

  .feature-badges {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
  }

  /* CTA Section */
  .cta-section {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
  }

  .cta-button {
    transform: translateY(30px);
    opacity: 0;
    animation: cta-reveal 0.8s ease-out forwards;
  }

  /* Services */
  .services-section {
    width: 100%;
  }

  .services-grid {
    gap: 2rem;
    max-width: 60rem;
    margin: 0 auto;
  }

  .service-card {
    padding: 2rem;
    text-align: center;
    transform: translateY(40px);
    opacity: 0;
    animation: card-reveal 0.8s ease-out forwards;
  }

  .service-card:hover {
    transform: translateY(-8px);
  }

  .service-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
    animation: icon-bounce 0.6s ease-out 0.3s both;
  }

  .service-card:hover .service-icon {
    animation: icon-wiggle 0.6s ease-in-out;
  }

  .service-title {
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--text-primary);
    margin: 0 0 0.5rem 0;
  }

  .service-description {
    font-size: 0.875rem;
    color: var(--text-muted);
    margin: 0;
  }

  /* Hero-specific Animations */
  @keyframes parallax-zoom {
    0%, 100% { transform: scale(1.1) translate(0, 0); }
    25% { transform: scale(1.15) translate(-2%, -1%); }
    50% { transform: scale(1.12) translate(1%, -2%); }
    75% { transform: scale(1.18) translate(-1%, 1%); }
  }

  @keyframes particles-drift {
    0% { transform: translateX(0); }
    100% { transform: translateX(-200px); }
  }

  @keyframes title-reveal {
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes divider-expand {
    to { transform: scaleX(1); }
  }

  @keyframes glow-pulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.8; }
  }

  @keyframes cta-reveal {
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes card-reveal {
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes icon-bounce {
    0% { transform: translateY(10px); opacity: 0; }
    60% { transform: translateY(-5px); opacity: 1; }
    100% { transform: translateY(0); }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .hero-content {
      gap: 1.5rem; /* Smaller gaps on mobile */
      padding-bottom: clamp(1.5rem, 6vh, 3rem);
    }

    .cta-section {
      flex-direction: column;
      align-items: center;
    }

    .cta-button {
      width: 100%;
      max-width: 300px;
      justify-content: center;
    }

    .services-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .feature-badges {
      flex-direction: column;
      align-items: center;
      gap: 0.75rem; /* Smaller gaps between badges */
    }

    .floating-orb {
      display: none; /* Hide on mobile for performance */
    }
  }

  @media (max-width: 480px) {
    .hero-content {
      gap: 1.25rem; /* Even tighter on small screens */
      padding-bottom: clamp(1rem, 4vh, 2rem);
    }

    .service-card {
      padding: 1.5rem;
    }

    .hero-header {
      gap: 0.75rem;
    }

    .hero-description {
      gap: 1rem;
    }
  }

  /* Landscape mobile optimization */
  @media (max-height: 600px) and (orientation: landscape) {
    .hero-content {
      gap: 1rem;
      padding-top: 1rem;
      padding-bottom: 1rem;
      min-height: auto;
      justify-content: flex-start;
      padding-top: 2rem;
    }

    .hero-section {
      min-height: auto;
      padding: 1rem 0;
    }

    .floating-orb {
      display: none;
    }
  }
</style>

<script>
  // Enhanced performance and accessibility features
  class HeroEnhancements {
    constructor() {
      this.init();
    }

    init() {
      this.setupIntersectionObserver();
      this.setupParallaxEffects();
      this.setupAccessibilityFeatures();
      this.setupPerformanceOptimizations();
    }

    setupIntersectionObserver() {
      if (!('IntersectionObserver' in window)) return;

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-in');
          }
        });
      }, {
        threshold: 0.1,
        rootMargin: '50px'
      });

      // Observe elements for animation triggering
      document.querySelectorAll('.animate-on-scroll').forEach(el => {
        observer.observe(el);
      });
    }

    setupParallaxEffects() {
      // Respect reduced motion preference
      if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) return;

      let ticking = false;
      
      const updateParallax = () => {
        const scrolled = window.pageYOffset;
        const rate = scrolled * -0.5;
        
        const orbs = document.querySelectorAll('.floating-orb');
        orbs.forEach((orb, index) => {
          const speed = parseFloat(orb.dataset.speed) || 0.5;
          const yPos = rate * speed;
          orb.style.transform = `translate3d(0, ${yPos}px, 0)`;
        });
        
        ticking = false;
      };

      const requestTick = () => {
        if (!ticking) {
          requestAnimationFrame(updateParallax);
          ticking = true;
        }
      };

      window.addEventListener('scroll', requestTick, { passive: true });
    }

    setupAccessibilityFeatures() {
      // Enhanced keyboard navigation for service cards
      const serviceCards = document.querySelectorAll('.service-card');
      serviceCards.forEach(card => {
        card.addEventListener('keydown', (e) => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            card.click();
          }
        });
      });

      // Auto-focus management for better UX
      const ctaButtons = document.querySelectorAll('.cta-button');
      ctaButtons.forEach((button, index) => {
        if (index === 0) {
          button.setAttribute('data-primary-cta', 'true');
        }
      });
    }

    setupPerformanceOptimizations() {
      // Lazy load background image if not in viewport
      const heroBackground = document.querySelector('.hero-bg-image');
      if (heroBackground && 'loading' in HTMLImageElement.prototype) {
        const imageObserver = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              const img = entry.target;
              img.style.opacity = '0.3';
              imageObserver.unobserve(img);
            }
          });
        });
        imageObserver.observe(heroBackground);
      }

      // Preload critical resources
      const preloadLink = document.createElement('link');
      preloadLink.rel = 'preload';
      preloadLink.as = 'image';
      preloadLink.href = '/mainpcpic.jpg';
      document.head.appendChild(preloadLink);

      // Optimize animations based on device capabilities
      const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');
      const updateAnimationPreference = () => {
        document.documentElement.style.setProperty(
          '--animation-play-state', 
          prefersReducedMotion.matches ? 'paused' : 'running'
        );
      };
      
      prefersReducedMotion.addEventListener('change', updateAnimationPreference);
      updateAnimationPreference();
    }
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new HeroEnhancements());
  } else {
    new HeroEnhancements();
  }

  // Handle resize events efficiently
  let resizeTimeout;
  window.addEventListener('resize', () => {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(() => {
      const event = new CustomEvent('heroResize');
      document.dispatchEvent(event);
    }, 250);
  }, { passive: true });
</script>